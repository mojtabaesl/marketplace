name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: read
  contents: read

jobs:
  pr-title-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PR title for Conventional Commits format
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # Run this command as early as possible, before dependencies are installed
      - name: Task distribution via Nx Cloud
        run: npx nx start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Deps
        run: npm ci --legacy-peer-deps

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      - name: Lint
        run: npx nx affected -t lint

      - name: Test
        run: npx nx affected -t test

      - name: Build
        run: npx nx affected -t build

      - name: Nx fix-ci (self-healing tips)
        run: npx nx fix-ci
        if: always()

    # Security checks
  security:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write # required for uploading SARIF reports
      id-token: write # required by Scorecards to fetch OIDC token
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Secret scanning with Gitleaks
      - name: Secret scan (gitleaks)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git -v
